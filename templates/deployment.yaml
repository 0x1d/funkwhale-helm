apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-funkwhale
  labels:
    app: funkwhale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: funkwhale
  template:
    metadata:
      labels:
        app: funkwhale
    spec:
      initContainers:
      - name: migrate
        image: funkwhale/funkwhale:0.16
        args: ["sh", "-c" ,"python manage.py migrate && (echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser(username='admin', email='admin@example.com', password='pass')\" | python manage.py shell)"]
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-funkwhale-env
      containers:
      - name: api
        image: funkwhale/funkwhale:0.16
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-funkwhale-env
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: music-mount
          mountPath: /srv/funkwhale/data/
      volumes:
      - name: music-mount
        hostPath:
          path: /host-home/

